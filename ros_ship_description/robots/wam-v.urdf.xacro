<robot xmlns:xacro="http://ros.org/wiki/xacro" name="wam-v">
  <xacro:property name="hal_position_x" value="0.5" />
  <xacro:property name="hal_position_y" value="1.05" />
  <xacro:property name="hal_position_z" value="0.5" />
  <xacro:property name="hal_size_x" value="4.0" />
  <xacro:property name="hal_size_y" value="0.5" />
  <xacro:property name="hal_size_z" value="0.5" />
  <xacro:property name="motor_position_x" value="-1.5" />
  <xacro:property name="motor_position_y" value="1.027" />
  <xacro:property name="motor_position_z" value="-1.705" />

  <xacro:property name="motor_size_x" value="0.1" />
  <xacro:property name="motor_size_y" value="0.2" />
  <xacro:property name="motor_size_z" value="0.2" />

  <xacro:property name="rotational_speed_effort" value="1" />
  <xacro:property name="joint_state_topic" value="/wam_v/joint_states" />

  <link name="base_link">
    <visual>
     <geometry>
       <mesh filename="package://ros_ship_description/mesh/WAM-V.dae"/>
     </geometry>
   </visual>
   <collision name="base_link_collision">
     <geometry>
       <mesh filename="package://ros_ship_description/mesh/WAM-V.dae"/>
     </geometry>
   </collision>
   <inertial>
     <mass value="247.07"/>
     <inertia ixx="200" ixy="0.03" ixz="3.09" iyy="181.69" iyz="-0.05" izz="165.39"/>
   </inertial>
  </link>

  <joint name="base_link_joint" type="fixed">
    <origin xyz="0 0 1.84"/>
    <parent link="base_footprint"/>
    <child link="base_link"/>
  </joint>

  <link name="base_footprint"/>

  <link name="right_motor">
    <visual>
     <geometry>
       <mesh filename="package://ros_ship_description/mesh/PROPELLER.dae"/>
     </geometry>
    </visual>
    <collision name="right_motor_collision">
      <geometry>
        <mesh filename="package://ros_ship_description/mesh/PROPELLER.dae"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="0.01"/>
      <inertia ixx="0.00086" ixy="0.00" ixz="0.00" iyy="0.00086" iyz="0.00" izz="0.0017"/>
    </inertial>
  </link>

  <joint name="right_motor_joint" type="continuous">
    <origin xyz="${motor_position_x} -${motor_position_y} ${motor_position_z}"/>
    <parent link="base_link"/>
    <child link="right_motor"/>
    <limit effort="0.5293" velocity="100${pi}" />
  </joint>

  <link name="left_motor">
    <visual>
     <geometry>
       <mesh filename="package://ros_ship_description/mesh/PROPELLER.dae"/>
     </geometry>
    </visual>
    <collision name="left_motor_collision">
      <geometry>
        <mesh filename="package://ros_ship_description/mesh/PROPELLER.dae"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="0.01"/>
      <inertia ixx="0.00086" ixy="0.00" ixz="0.00" iyy="0.00086" iyz="0.00" izz="0.0017"/>
    </inertial>
  </link>

  <joint name="left_motor_joint" type="continuous">
    <origin xyz="${motor_position_x} ${motor_position_y} ${motor_position_z}"/>
    <parent link="base_link"/>
    <child link="left_motor"/>
    <limit effort="0.5293" velocity="100${pi}" />
  </joint>

  <link name="gps"/>

  <joint name="gps_joint" type="fixed">
    <origin xyz="0.8 0 0"/>
    <parent link="base_link"/>
    <child link="gps"/>
  </joint>

  <transmission name="right_motor_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="right_motor_joint">
      <hardwareInterface>VelocityJointInterface</hardwareInterface>
    </joint>
    <actuator name="right_motor_actuator">
      <hardwareInterface>VelocityJointInterface</hardwareInterface>
      <mechanicalReduction>30</mechanicalReduction>
    </actuator>
  </transmission>

  <transmission name="left_motor_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="left_motor_joint">
      <hardwareInterface>VelocityJointInterface</hardwareInterface>
    </joint>
    <actuator name="left_motor_actuator">
      <hardwareInterface>VelocityJointInterface</hardwareInterface>
      <mechanicalReduction>30</mechanicalReduction>
    </actuator>
  </transmission>

  <gazebo>
    <plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so">
      <robotNamespace>/wam_v</robotNamespace>
    </plugin>

    <plugin name="simple_buoyancy_base_right" filename="libsimple_buoyancy_plugin.so">
      <target_link>base_footprint</target_link>
      <cob_x>${hal_position_x}</cob_x>
      <cob_y>-${hal_position_y}</cob_y>
      <cob_z>${hal_position_z}</cob_z>
      <bbox_x>${hal_size_x}</bbox_x>
      <bbox_y>${hal_size_y}</bbox_y>
      <bbox_z>${hal_size_z}</bbox_z>
      <publish_data>true</publish_data>
      <bbox_prefix>right_bbox</bbox_prefix>
      <force_offset_x>0.01</force_offset_x>
    </plugin>

    <plugin name="simple_buoyancy_base_left" filename="libsimple_buoyancy_plugin.so">
      <target_link>base_footprint</target_link>
      <cob_x>${hal_position_x}</cob_x>
      <cob_y>${hal_position_y}</cob_y>
      <cob_z>${hal_position_z}</cob_z>
      <bbox_x>${hal_size_x}</bbox_x>
      <bbox_y>${hal_size_y}</bbox_y>
      <bbox_z>${hal_size_z}</bbox_z>
      <publish_data>true</publish_data>
      <bbox_prefix>left_bbox</bbox_prefix>
      <force_offset_x>0.01</force_offset_x>
    </plugin>

    <plugin name="simple_buoyancy_motor_right" filename="libsimple_buoyancy_plugin.so">
      <target_link>right_motor</target_link>
      <position_reference_link>base_footprint</position_reference_link>
      <cob_x>-1.5</cob_x>
      <cob_y>-1</cob_y>
      <cob_z>0.2</cob_z>
      <bbox_x>${motor_size_x}</bbox_x>
      <bbox_y>${motor_size_y}</bbox_y>
      <bbox_z>${motor_size_z}</bbox_z>
      <publish_data>true</publish_data>
    </plugin>

    <plugin name="simple_buoyancy_motor_left" filename="libsimple_buoyancy_plugin.so">
      <target_link>left_motor</target_link>
      <position_reference_link>base_footprint</position_reference_link>
      <cob_x>-1.5</cob_x>
      <cob_y>1</cob_y>
      <cob_z>0.2</cob_z>
      <bbox_x>${motor_size_x}</bbox_x>
      <bbox_y>${motor_size_y}</bbox_y>
      <bbox_z>${motor_size_z}</bbox_z>
      <publish_data>true</publish_data>
    </plugin>

    <plugin name="novatel_gps_sim" filename="libhector_gazebo_ros_gps.so">
      <alwaysOn>1</alwaysOn>
      <updateRate>10</updateRate>
      <bodyName>gps</bodyName>
      <topicName>fix</topicName>
      <velocityTopicName>fix_velocity</velocityTopicName>
      <drift>5.0 5.0 5.0</drift>
      <gaussianNoise>0.1 0.1 0.1</gaussianNoise>
      <velocityDrift>0 0 0</velocityDrift>
      <velocityGaussianNoise>0.1 0.1 0.1</velocityGaussianNoise>
    </plugin>

    <plugin name="simple_driving_force_left" filename="libsimple_driving_force_plugin.so">
      <target_link>left_motor</target_link>
      <target_joint>left_motor_joint</target_joint>
      <rotational_speed_effort>${rotational_speed_effort}</rotational_speed_effort>
      <joint_state_topic>${joint_state_topic}</joint_state_topic>
    </plugin>

    <plugin name="simple_driving_force_right" filename="libsimple_driving_force_plugin.so">
      <target_link>right_motor</target_link>
      <target_joint>right_motor_joint</target_joint>
      <rotational_speed_effort>${rotational_speed_effort}</rotational_speed_effort>
      <joint_state_topic>${joint_state_topic}</joint_state_topic>
    </plugin>

    <plugin name="imu_plugin" filename="libgazebo_ros_imu.so">
      <alwaysOn>true</alwaysOn>
      <bodyName>base_link</bodyName>
      <topicName>imu</topicName>
      <serviceName>imu_service</serviceName>
      <gaussianNoise>0.0</gaussianNoise>
      <updateRate>20.0</updateRate>
    </plugin>
  </gazebo>

</robot>
