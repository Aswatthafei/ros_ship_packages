<launch>
  <param name="robot_description" command="$(find xacro)/xacro --check-order $(find ros_ship_description)/robots/wam-v.urdf.xacro" />
  <param name="water_surface_height" value="0.0" type="double"/>

  <node name="rviz" pkg="rviz" type="rviz" args="-d $(find ros_ship_description)/config/wam-v.rviz" required="true" />

  <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
    args="-urdf -model wam-v -param robot_description -x 0 -y 0 -z -0.3"/>

  <include file="$(find ros_ship_control)/launch/wam-v_control.launch"/>

  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="paused" value="false"/>
    <arg name="use_sim_time" value="true"/>
    <arg name="world_name" value="$(find ros_ship_description)/world/open_water.world"/>
  </include>

  <node name="utm_odometry_node" pkg="gps_common" type="utm_odometry_node" args="" output="screen" respawn="true">
    <param name="child_frame_id" value="odom" type="str"/>
    <remap from="/odom" to="/gps_odom" />
  </node>

  <node name="world_frame_publisher" pkg="ros_ship_navigation" type="world_frame_publisher.py" args="" output="screen" respawn="true">
    <remap from="/odom" to="/gps_odom" />
  </node>

  <node pkg="robot_pose_ekf" type="robot_pose_ekf" name="robot_pose_ekf">
    <param name="output_frame" value="odom"/>
    <param name="freq" value="30.0"/>
    <param name="sensor_timeout" value="1.0"/>
    <param name="odom_used" value="false"/>
    <param name="imu_used" value="true"/>
    <param name="vo_used" value="true"/>
    <param name="debug" value="false"/>
    <param name="self_diagnose" value="false"/>
    <remap from="/imu_data" to="/imu" />
    <remap from="/vo" to="/gps_odom" />
  </node>

  <node name="twist_from_fix_velocity_node" pkg="ros_ship_navigation" type="twist_from_fix_velocity_node" args="" output="screen" respawn="true">
    <remap from="/twist" to="/wam_v/twist" />
    <param name="imu_frame" value="base_link" type="str"/>
  </node>

  <node name="joy_node" pkg="joy" type="joy_node" args="" output="screen" respawn="true">
  </node>

  <node name="joy_to_cmd_node" pkg="ros_ship_navigation" type="joy_to_cmd.py" args="" output="screen" respawn="true">
    <param name="max_value" value="2" type="double"/>
  </node>

</launch>
